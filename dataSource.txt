The function should return a dictionary of lists. This dictionary will be referred to as the data.
The dictionary of lists should have keys that are all string constants and the values should be lists, even if there is only one value in each list.
Do not use variables as the keys to the dictionary.
Ideally the data should be a dictionary where the keys are all strings, and the values are lists of numbers or strings.
More complex types in the list values should only be used if specifically requested by the user or have to be used to produce a function for the query.
If there is a case where there shouldn't be any output from the function, then the function should return None.
ata should not be seperated by unique identifiers but rather grouped togeter under common keys.
For example if getting data from an api about stocks, two groups could be price and time.
The number of keys to the dictionary should not change between different calls to the function.
Very important, above all else, if returning a dict, do not use variables as the keys, use string constants.

Example:
User - "Get the text from a list of text files in a directory"
Response - "
```python
import os

def read_file(file_path):
    with open(file_path, 'r') as file:
        return file.read()

def get_text_from_files(directory_path):
    text = []
    for filename in os.listdir(directory_path):
        if filename.endswith(".txt"):
            file_text = read_file(os.path.join(directory_path, filename))
            text.append(file_text)
    return {"text": text}
```
entry: get_text_from_files
The entry function to this code is `get_text_from_files`. It takes a string argument `directory_path` which should be the path to the directory that contains the text files you are interested in. It calls `read_file` for every .txt file in the directory and stores the return values in a list.

`read_file` is a helper function that takes a string argument `file_path` which should be the complete path to a single file. It reads the file and returns its content as a string.

This code assumes all the files in the specified directory are text files and that they are all encoded in a way that python can decode (usually utf-8). 

If there are no files or if no .txt files are found in the specified directory, `get_text_from_files` will return an empty dictionary.

output: text
"